@page "{taskId:int}"
@model FrontEndRazor.Pages.GroupTasks.UpdateTaskModel
@{
    ViewData["Title"] = "Update Task";
}

<!-- Main Container -->
<div class="container mt-5">
    <!-- Header -->
    <div class="row mb-4">
        <div class="col-12 text-center">
            <h1 class="display-4 text-warning">@ViewData["Title"]</h1>
            <p class="lead text-muted">Update the details for task: <strong>@Model.UpdateGroupTaskDTO.TaskName</strong></p>
        </div>
    </div>

    <!-- Form Card -->
    <div class="row">
        <div class="col-md-8 offset-md-2">
            <div class="card shadow-sm">
                <div class="card-body">

                    <!-- Error message display -->
                    @if (!string.IsNullOrEmpty(Model.Message))
                    {
                            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                            @Model.Message
                                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                            </div>
                    }

                    <!-- Update Task Form -->
                    <form method="post" class="needs-validation" novalidate>
                        <input type="hidden" asp-for="GroupID" />
                        <input type="hidden" asp-for="UpdateGroupTaskDTO.Id" />

                        <div class="mb-3">
                            <label for="TaskName" class="form-label fw-bold">Task Name</label>
                            <input type="text" class="form-control" id="TaskName" asp-for="UpdateGroupTaskDTO.TaskName" placeholder="Enter task name" required />
                            <div class="invalid-feedback">
                                Task name is required.
                            </div>
                        </div>

                        <div class="mb-3">
                            <label for="TaskDescription" class="form-label fw-bold">Task Description</label>
                            <textarea class="form-control" id="TaskDescription" asp-for="UpdateGroupTaskDTO.TaskDescription" placeholder="Enter task description" required></textarea>
                            <div class="invalid-feedback">
                                Task description is required.
                            </div>
                        </div>

                        <div class="mb-3">
                            <label asp-for="UpdateGroupTaskDTO.DependancyTaskID" class="form-label fw-bold">Dependency Task</label>
                            <select asp-for="UpdateGroupTaskDTO.DependancyTaskID" class="form-select" asp-items="Model.DependancyTasks">
                                <option value="">None</option>
                            </select>
                        </div>

                        <!-- Buttons -->
                        <div class="d-flex justify-content-end">
                            <button type="submit" class="btn btn-primary me-2">
                                <i class="bi bi-save"></i> Update Task
                            </button>
                            <a asp-page="/GroupTasks/GroupTasks" asp-route-groupId="@Model.GroupID" class="btn btn-secondary">
                                <i class="bi bi-x-circle"></i> Cancel
                            </a>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Scripts Section for Bootstrap and Icons -->
@section Scripts {
        <partial name="_ValidationScriptsPartial" />
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
        <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons/font/bootstrap-icons.css" rel="stylesheet">

        <script>
            // Bootstrap form validation
            (function () {
                'use strict';
                window.addEventListener('load', function () {
                    var forms = document.getElementsByClassName('needs-validation');
                    Array.prototype.filter.call(forms, function (form) {
                        form.addEventListener('submit', function (event) {
                            if (form.checkValidity() === false) {
                                event.preventDefault();
                                event.stopPropagation();
                            }
                            form.classList.add('was-validated');
                        }, false);
                    });
                }, false);
            })();
        </script>
}
